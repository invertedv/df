// core functions
add:(%s + %s):{int,int},{float,float}:int,float:C:N
subtract:(%s - %s):{int,int},{float,float}:int,float:C:N
multiply:(%s * %s):{int,int},{float,float}:int,float:C:N
divide:(%s / %s):{int,int},{float,float}:int,float:C:N

exp:exp(%s):{float}:float:C:N
log:log(%s):{float}:float:C:N
sin:sin(%s):{float}:float:C:N
cos:cos(%s):{float}:float:C:N
tan:tan(%s):{float}:float:C:N
asin:asin(%s):{float}:float:C:N
acos:acos(%s):{float}:float:C:N
atan:atan(%s):{float}:float:C:N
atan2:atan2(%s,%s):{float,float}:float:C:N
abs:abs(%s):{float},{int}:float,int:C:N
rowNumber:toInt32(rowNumberInBlock())::int:C:N
ageMonths:toInt32(age('month',%s,%s)):{date,date}:int:C:N
ageYears:toInt32(age('year',#0,#1)):{date,date}:int:C:N
eq:(%s == %s):{float,float},{int,int},{string,string},{date,date}:int,int,int,int:C:N
ne:(%s != %s):{float,float},{int,int},{string,string},{date,date}:int,int,int,int:C:N
gt:(%s > %s):{float,float},{int,int},{string,string},{date,date}:int,int,int,int:C:N
ge:(%s >= %s):{float,float},{int,int},{string,string},{date,date}:int,int,int,int:C:N
lt:(%s < %s):{float,float},{int,int},{string,string},{date,date}:int,int,int,int:C:N
le:(%s <= %s):{float,float},{int,int},{string,string},{date,date}:int,int,int,int:C:N
neg:-%s:{float},{int}:float,int:C:N
and:and(%s,%s):{int,int}:int:C:N
or:or(%s,%s):{int,int}:int:C:N
not:not(%s):{int}:int:C:N
if:if(%s>0,%s,%s):{int,float,float},{int,int,int},{int,string,string},{int,date,date}:float,int,string,date:C:N
date:cast(toString(%s) AS date):{int},{string},{date}:date,date,date:C:N
float:toFloat64(%s):{float},{int},{string}:float,float,float:C:N
int:toInt32(%s):{float},{int},{string}:int,int,int:C:N
string:toString(%s):{float},{int},{string},{date}:string,string,string,string:C:N
substr:substr(%s,%s+1,%s):{string,int,int}:string:C:N
sqrt:sqrt(%s):{float},{int}:float,float:C:N
pi:3.141592654::float:C:N
sign:sign(%s):{float},{int}:int,int:C:N
mod:mod(%s,%s):{int,int}:int:C:N
pow:pow(%s,%s):{float,float},{float,int},{int,float},{int,int}:float,float,float,float:C:N
round:round(%s):{float}:float:C:N
concat:concat:{string}:string:C:Y
colMax:greatest:{float},{int},{string},{date}:float,int,string,date:C:Y
colMin:least:{float},{int},{string},{date}:float,int,string,date:C:Y
colSum:colSum:{float},{int}:float,int:C:Y
colMean:colMean:{float},{int}:float,float:C:Y
colVar:colVar:{float},{int}:float,float:C:Y
colStd:colStd:{float},{int}:float,float:C:Y

mean:avg(%s):{int},{float}:float,float:S:N
sum:sum(%s):{int},{float}:int,float:S:N
count:count(%s):{float},{int},{string},{date},{categorical}:int,int,int,int,int:S:N
max:max(%s):{float},{int},{string},{date}:float,int,string,date:S:N
min:min(%s):{float},{int},{string},{date}:float,int,string,date:S:N
quantile:quantileBFloat16(%s)(%s):{float,float},{float,int}:float,float:S:N
median:quantileBFloat16(0.5)(%s):{float},{int}:float,float:S:N
lq:quantileBFloat16(0.25)(%s):{float},{int}:float,float:S:N
uq:quantileBFloat16(0.75)(%s):{float},{int}:float,float:S:N
var:varSampStable(%s):{float},{int}:float,float:S:N
std:stddevSampStable(%s):{float},{int}:float,float:S:N


dot:sum(%s*%s):{float,float},{int,int}:float,float:S:N
